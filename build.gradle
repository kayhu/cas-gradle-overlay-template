import org.jose4j.jwk.JsonWebKey
import org.jose4j.jwk.OctJwkGenerator

buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public' }
    }
    dependencies {
        classpath "org.bitbucket.b_c:jose4j:0.5.6"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${project.'springboot.version'}"
    }
}

subprojects {
    group = 'org.iakuh.kauth'
    version = '1.0-SNAPSHOT'

    apply plugin: 'eclipse'
    apply plugin: 'idea'

    eclipse {
        classpath {
            downloadSources = true
            downloadJavadoc = true
        }
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }

    task allDependenciesInsight(type: DependencyInsightReportTask, description: "Produce insight information for all dependencies") {}
    task allDependencies(type: DependencyReportTask, description: "Display a graph of all project dependencies") {}
}

task wrapper(type: Wrapper, description: "Update the Gradle wrapper") {
    gradleVersion = project."gradle.version"
}

task generateKeys {
  group = 'CAS'
  description = 'Generate keys for CAS. These keys can be added to your cas.properties file'
  doLast {
    println 'Generating keys for CAS...'
    ['cas.tgc.encryptionKey': 256, 'cas.tgc.signingKey': 512, 'cas.webflow.encryption.key': 96, 'cas.webflow.signing.key': 512].each { key, size ->
        def octetKey = OctJwkGenerator.generateJwk(size)
        def params = octetKey.toParams(JsonWebKey.OutputControlLevel.INCLUDE_SYMMETRIC)
        println "${key}=${params.get('k')}"
    }
  }
}
